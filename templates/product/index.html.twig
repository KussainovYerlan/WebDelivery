{% extends 'base.html.twig' %}

{% block title %}Product index{% endblock %}

{% block body %}
{% include('includes/shopping_cart.html.twig') %}
{% include('includes/product_show.html.twig') %}

<div class="row">

    <div class="col-lg-3">
        <a href="{{ path("index") }}" class="row">
            <img class="mb-2 align-self-center" width="50px" height="50x" src="{{ asset('img/' ~ 'logo.svg') }}">
            <div class="col">
                <h2 class="text-logo">Web Delivery</h2>
            </div>
        </a>
        <div class="list-group">
            <a href="{{ path('product_index', { page: thisPage, query: app.request.get('query'), category: null, id: app.request.get('id')}) }}" class="list-group-item">Все продукты</a>
            {% for category in categories %}
                <a href="{{ path('product_index', { page: thisPage, query: app.request.get('query'), category: category.getId(), id: app.request.get('id')}) }}" class="list-group-item">{{ category.getName() }}</a>
            {% endfor %}
        </div>
    </div>

    <div class="col-lg-9">
        {# Search products #}
        <div class="row">
            <div class="col-8">
                <form action="{{ path('product_index', {'id' : app.request.get('id')}) }}">
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <button class="btn btn-primary" onclick="">
                                <b>{{ seller.name }}</b> 
                                <i class="icon ion-md-arrow-round-down"></i>
                            </button>
                        </div>
                        <input type="text" class="form-control" value="{{app.request.get('query')}}" name="query" placeholder="Поиск в магазине {{ seller.name }}">
                        <div class="input-group-append">
                            <button type="submit" class="btn btn-outline-secondary">
                                <i class="icon ion-md-search"></i>
                            </button>
                        </div>
                    </div>
                </form>
            </div>

            {# Account dropdown #}
            <div class="col-2 dropdown">
                <button class="btn btn-outline-secondary" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="icon ion-md-arrow-dropdown"></i> Aккаунт
                </button>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                {% if is_granted('IS_AUTHENTICATED_REMEMBERED') != true %}
                    <a class="dropdown-item" href="{{ path('app_login') }}">
                        <i class="icon ion-md-log-in"></i> Вход
                    </a>
                    <a class="dropdown-item" href="{{ path('app_register') }}">
                        <i class="icon ion-md-person-add"></i> Регистрация
                    </a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="{{ path('seller_requests_new')}}">
                        <i class="icon ion-md-briefcase"></i> Стать продавцом</a>
                {% endif %}
                {% if is_granted('IS_AUTHENTICATED_REMEMBERED') and (is_granted('ROLE_ADMIN') != true) %}
                    <a class="dropdown-item" href="{{ path('profile') }}">
                        <i class="icon ion-md-desktop"></i> Личный кабинет
                    </a>
                {% endif %}
                {% if is_granted('ROLE_ADMIN') %}
                    <a class="dropdown-item" href="{{ path('admin_dashboard') }}">
                        <i class="icon ion-md-build"></i> Панель администратора
                    </a>
                {% endif %}
                {% if is_granted('IS_AUTHENTICATED_REMEMBERED') %}
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="{{ path('logout') }}">
                        <i class="icon ion-md-log-out"></i> Выход
                    </a>
                {% endif %}
                </div>
            </div>
            <div class="col-2">
                <a class="btn btn-primary" id="shopping-cart_open" href="#">
                    <i class="icon ion-md-cart"></i>
                    Корзина
                    <div id="shopping-cart_total-count">27</div>
                </a>
            </div>
        </div>

        {# Products cards #}
        <div class="row">
        {% for product in products %}
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card h-100" id="product">
                    <a href="#"><img class="card-img-top product-image" src="{{ asset('uploads/product_images/' ~ product.image) }}" alt=""></a>
                    <div class="card-body">
                        <h4 class="card-title">
                            <a href="#" onclick="showProduct({{ product.id }})" class="product-name">{{ product.name }}</a>
                        </h4>
                        <p class="card-text product-description">
                        {% if product.description|length > 50 %}
                            {{ product.description[:50] }}...
                        {% else %}
                            {{ product.description }}
                        {% endif %}
                        </p>
                    </div>
                    <div class="card-footer d-flex justify-content-between align-items-center">
                        <span class="text-muted product-price">{{ product.price }} Р</span>
                        <button class="btn btn-add btn-sm btn-outline-secondary" id="{{ product.id }}">В корзину</button>
                    </div>
                </div>
            </div>
        {% endfor %}
        </div>

        <div class="row justify-content-md-center">
            <nav>
                <ul class="pagination justify-content-center">
                    <li class="page-item" {{ thisPage == 1 ? 'class="disabled"' }}>
                        <a class="page-link" href="{{ path('product_index', {page: thisPage-1 < 1 ? 1 : thisPage-1, query: app.request.get('query'), 'id' : app.request.get('id'), category: app.request.get('category')}) }}">«</a>
                    </li>

                    {% for i in 1..maxPages %}
                        {% if i > 0 %}
                            <li class="page-item {{ thisPage == i ? 'active' }}" >
                                <a class="page-link" href="{{ path('product_index', {page: i, query: app.request.get('query'), 'id' : app.request.get('id'), category: app.request.get('category')}) }}">{{ i }}</a>
                            </li>
                        {% endif %}
                    {% endfor %}

                    <li class="page-item" {{ thisPage == maxPages ? 'class="disabled"' }}>
                        <a class="page-link" href="{{ path('product_index', {page: thisPage+1 <= maxPages ? thisPage+1 : thisPage, query: app.request.get('query'), 'id' : app.request.get('id'), category: app.request.get('category')}) }}">»</a>
                    </li>
                </ul>
            </nav>
        </div>

    </div>

</div>
{% endblock %}
{% block javascripts %}
{{ parent() }}
<script type="text/javascript">
let d = document,
    addButtons = d.querySelectorAll('.btn-add'),
    cartCont = d.getElementById('shopping-cart_list'),
    hiddenPrice = 0

const addEvent = (elem, type, handler) => {
    if(elem.addEventListener){
        elem.addEventListener(type, handler, false);
    } else {
        elem.attachEvent('on'+type, () => { handler.call( elem ) })
    }
    return false;
}

const getCartData = () => JSON.parse(localStorage.getItem('cart'))

const setCartData = (o) => {
    localStorage.setItem('cart', JSON.stringify(o))
}

const delFromCart = e => {
    let cartData = getCartData() || {},
        id = e.target.parentNode.id
    
    delete cartData[id]

    setCartData(cartData)
    updateCartContent()
    updateTotalCount()
    return false
}

const delButtonTitleChange = e => {
    let element = e.target
    if (e.type == 'mouseout') {
        element.innerHTML = hiddenPrice
    } else {
        hiddenPrice = element.innerHTML
        element.innerHTML = 'Удалить'
    }
}

const updateCartContent = () => {
    let cartData = getCartData(),
        totalItems = '',
        totalSum = 0,
        totalCount = 0
    
    if(cartData !== null){
        totalItems = `<table class="table">
                        <tbody id="shopping-cart_content">`
        for(let item in cartData){
            totalItems += `<tr id="${item}">
                            <input type="hidden" id="${item}">
                            <td><img width="80px" src="${cartData[item][1]}"></td>
                            <td><b>${cartData[item][2]}</b><br><small>${cartData[item][3]}</smal></td>
                            <td>${cartData[item][0]}</td>
                            <td>x</td>
                            <td class="btn-del">${cartData[item][4]}</td>
                            </tr>`
            totalCount += parseInt(cartData[item][0])
            totalSum += parseInt(cartData[item][4]) * parseInt(cartData[item][0])
        }
        totalItems += `</tbody>
                    </table>`
        cartCont.innerHTML = totalItems
    } else {
        totalCount = 0
    }

    if (totalCount == 0) {
        cartCont.innerHTML = 'Корзина пуста'
    }

    d.getElementById('shopping-cart_total').innerHTML = totalSum + ' P'

    let delButtons = d.querySelectorAll('.btn-del')
    for(var i = 0; i < delButtons.length; i++){
        addEvent(delButtons[i], 'click', delFromCart)
        addEvent(delButtons[i], 'mouseover', delButtonTitleChange)
        addEvent(delButtons[i], 'mouseout', delButtonTitleChange)
        delButtons[i].style.cursor = 'pointer'
    }
}

const addToCart = e => {
    let cartData = getCartData() || {},
        id = e.target.id,
        item = e.target.parentNode.parentNode,
        img = item.querySelector('.product-image').src,
        name = item.querySelector('.product-name').innerHTML,
        price = item.querySelector('.product-price').innerHTML,
        description = item.querySelector('.product-description').innerHTML

    if(cartData.hasOwnProperty(id)){
        cartData[id][0] += 1
    } else {
        cartData[id] = [1, img, name, description, price]
    }
    setCartData(cartData)
    updateTotalCount()
}

const updateTotalCount = () => {
    let cartData = getCartData(),
        totalCount = 0

    for(let item in cartData) {
        totalCount += parseInt(cartData[item][0])
    }

    if (totalCount > 0){
        d.getElementById('shopping-cart_total-count').style.display = 'block'
        d.getElementById('shopping-cart_total-count').innerHTML = totalCount
    } else {
        d.getElementById('shopping-cart_total-count').style.display = 'none'
    }
}

const openCart = () => {
    updateCartContent()
    $('#shopping-cart').modal('toggle')
    return false
}

const sendCart = (e) => {
    let cartData = getCartData() || {}
    let sendData = {}
    for (let id in cartData) {
        sendData[id] = cartData[id][0]
    }
    $.ajax({
        type: "POST",
        url: '/checkout/cart',
        data: {
            products: JSON.stringify(sendData),
        },
        datatype: "json"
    })
}

for(var i = 0; i < addButtons.length; i++){
    addEvent(addButtons[i], 'click', addToCart)
}

const showProduct = (id) => {
    $('#product-modal').modal('toggle')
    console.log('fdfsf')
    $.ajax({
        type: 'POST',
        url: `/product/${id}`,
        datatype: 'json',
        async: true,
        success: response => {
            const product = response['product']
            const imagePath = '{{ asset('uploads/product_images/') }}' + product['image']
            d.getElementById('product-modal__image').setAttribute('src', imagePath)
            d.getElementById('product-modal__name').innerHTML = product['name'] 
            d.getElementById('product-modal__image').innerHTML = product['name'] 
            d.getElementById('product-modal__description').innerHTML = product['description'] 
            d.getElementById('product-modal__price').innerHTML = product['price'] + ' P'
            d.getElementById('product-modal__category').innerHTML = product['category'] 
        },
        error: error => {
            alert('Произошла ошибка при загрузке товара')
        }
    })
}

addEvent(d.getElementById('shopping-cart_open'), 'click', openCart);
addEvent(d.getElementById('shopping-cart_send'), 'click', sendCart);

addEvent(d.getElementById('shopping-cart_clear'), 'click', e => {
    localStorage.removeItem('cart')
    d.getElementById('shopping-cart_list').innerHTML = 'Корзина пуста'
    d.getElementById('shopping-cart_total').innerHTML = '0'
    updateTotalCount()
})

updateTotalCount() 
</script>
{% endblock %}